/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package lensgenerator;

import lensgenerator.domain.Bar;
import lensgenerator.domain.Foo;
import lensgenerator.domain.Zee;
import lensgenerator.lens.processor.LensContainer;
import lensgenerator.lens.processor.LensFactory;
import org.junit.Assert;
import org.junit.Test;

import java.lang.reflect.InvocationTargetException;

public class AppTest {

    private LensFactory factory = new LensFactory();

    @Test
    public void fooLens_SimpleObject() {

        LensContainer container = factory.constructLens(Foo.class);

        try {
            Object o = container.newInstance();
            container.setFieldValue(Foo.HELLO_FIELD, o, "TEST");
            container.setFieldValue(Foo.WORLD_FIELD, o, "TESTING");

            Assert.assertEquals(container.getFieldValue(Foo.HELLO_FIELD, o), "TEST");
            Assert.assertEquals(container.getFieldValue(Foo.WORLD_FIELD, o), "TESTING");
        } catch (IllegalAccessException | InvocationTargetException | InstantiationException | NoSuchMethodException e) {
            e.printStackTrace();
        }
    }

    @Test
    public void barLens_ComplexObject() {

        LensContainer container = factory.constructLens(Bar.class);
        LensContainer zContainer = factory.constructLens(Zee.class);

        try {
            Object o = container.newInstance();

            container.setFieldValue(Bar.ZEE_FIELD, o, zContainer.newInstance());
            container.setFieldValue(Zee.HELLO_FIELD, o, "ZEE_HELLO_TEST");
            container.setFieldValue(Bar.HELLO_FIELD, o, "BAR_HELLO_TEST");

            Assert.assertEquals(container.getFieldValue(Zee.HELLO_FIELD, o), "ZEE_HELLO_TEST");
            Assert.assertEquals(container.getFieldValue(Bar.HELLO_FIELD, o), "BAR_HELLO_TEST");
        } catch (IllegalAccessException | InvocationTargetException | InstantiationException | NoSuchMethodException e) {
            e.printStackTrace();
        }
    }
}
